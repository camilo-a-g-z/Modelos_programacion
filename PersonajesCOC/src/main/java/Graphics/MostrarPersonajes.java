/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Graphics;

import Logica.Arquera;
import Logica.Barbaro;
import Logica.Duende;
import Logica.Gigante;
import Logica.Mago;
import Logica.Personaje;
import java.util.ArrayList;

/**
 *
 * @author User
 */
public class MostrarPersonajes extends javax.swing.JFrame {

    private ArrayList<String> nombres = new ArrayList<String>();
    private ArrayList<Personaje> personajes = new ArrayList<Personaje>();
    private String type;

    /**
     * Creates new form MostrarPersonajes
     */
    public MostrarPersonajes(ArrayList nombres, String type) {
        this.nombres = nombres;
        this.type = type;
        iniciarPersonajes();
        initComponents();
    }

    public MostrarPersonajes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MostrarPersonajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MostrarPersonajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MostrarPersonajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MostrarPersonajes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MostrarPersonajes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    public void iniciarPersonajes() {
        switch (type) {
            case "Barbaro":
                for (int i = 0; i < nombres.size(); i++) {
                    personajes.add(new Barbaro(nombres.get(i)));
                }
                break;
            case "Arquera":
                for (int i = 0; i < nombres.size(); i++) {
                    personajes.add(new Arquera(nombres.get(i)));
                }
                break;
            case "Duende":
                for (int i = 0; i < nombres.size(); i++) {
                    personajes.add(new Duende(nombres.get(i)));
                }
                break;
            case "Gigante":
                for (int i = 0; i < nombres.size(); i++) {
                    personajes.add(new Gigante(nombres.get(i)));
                }
                break;
            case "Mago":
                for (int i = 0; i < nombres.size(); i++) {
                    personajes.add(new Mago(nombres.get(i)));
                }
                break;
        }
        System.out.println(personajes.get(0).getGenero());
    }

}
